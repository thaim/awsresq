// Code generated by MockGen. DO NOT EDIT.
// Source: iam.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	iam "github.com/aws/aws-sdk-go-v2/service/iam"
	gomock "github.com/golang/mock/gomock"
)

// MockawsIamAPI is a mock of awsIamAPI interface.
type MockawsIamAPI struct {
	ctrl     *gomock.Controller
	recorder *MockawsIamAPIMockRecorder
}

// MockawsIamAPIMockRecorder is the mock recorder for MockawsIamAPI.
type MockawsIamAPIMockRecorder struct {
	mock *MockawsIamAPI
}

// NewMockawsIamAPI creates a new mock instance.
func NewMockawsIamAPI(ctrl *gomock.Controller) *MockawsIamAPI {
	mock := &MockawsIamAPI{ctrl: ctrl}
	mock.recorder = &MockawsIamAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockawsIamAPI) EXPECT() *MockawsIamAPIMockRecorder {
	return m.recorder
}

// ListRoles mocks base method.
func (m *MockawsIamAPI) ListRoles(ctx context.Context, params *iam.ListRolesInput, optFns ...func(*iam.Options)) (*iam.ListRolesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRoles", varargs...)
	ret0, _ := ret[0].(*iam.ListRolesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRoles indicates an expected call of ListRoles.
func (mr *MockawsIamAPIMockRecorder) ListRoles(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRoles", reflect.TypeOf((*MockawsIamAPI)(nil).ListRoles), varargs...)
}
