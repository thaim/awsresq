// Code generated by MockGen. DO NOT EDIT.
// Source: configservice.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	configservice "github.com/aws/aws-sdk-go-v2/service/configservice"
	gomock "github.com/golang/mock/gomock"
)

// MockawsConfigAPI is a mock of awsConfigAPI interface.
type MockawsConfigAPI struct {
	ctrl     *gomock.Controller
	recorder *MockawsConfigAPIMockRecorder
}

// MockawsConfigAPIMockRecorder is the mock recorder for MockawsConfigAPI.
type MockawsConfigAPIMockRecorder struct {
	mock *MockawsConfigAPI
}

// NewMockawsConfigAPI creates a new mock instance.
func NewMockawsConfigAPI(ctrl *gomock.Controller) *MockawsConfigAPI {
	mock := &MockawsConfigAPI{ctrl: ctrl}
	mock.recorder = &MockawsConfigAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockawsConfigAPI) EXPECT() *MockawsConfigAPIMockRecorder {
	return m.recorder
}

// DescribeConfigRules mocks base method.
func (m *MockawsConfigAPI) DescribeConfigRules(ctx context.Context, params *configservice.DescribeConfigRulesInput, optFns ...func(*configservice.Options)) (*configservice.DescribeConfigRulesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeConfigRules", varargs...)
	ret0, _ := ret[0].(*configservice.DescribeConfigRulesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeConfigRules indicates an expected call of DescribeConfigRules.
func (mr *MockawsConfigAPIMockRecorder) DescribeConfigRules(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeConfigRules", reflect.TypeOf((*MockawsConfigAPI)(nil).DescribeConfigRules), varargs...)
}
